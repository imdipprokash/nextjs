# name: Frontend Next.js CI

# # on: [push]
# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [19.x]

#     steps:
#       - name: Checkout the repo
#         uses: actions/checkout@v2
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v2
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: Install yarn
#         run: npm install -g yarn
#       - name: Get yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "::set-output name=dir::$(yarn cache dir)"
#       - uses: actions/cache@v2
#         id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - uses: actions/cache@v2
#         with:
#           path: "**/node_modules"
#           key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
#       - name: Install deps
#         working-directory: .
#         if: steps.yarn-cache.outputs.cache-hit != 'true'
#         run: yarn install
#       - name: Check codebase
#         working-directory: .
#         run: yarn build

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Install SSH Key
#         uses: shimataro/ssh-key-action@v2
#         with:
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           known_hosts: "placeholder"
#       - name: Adding Known Hosts
#         run: ssh-keyscan -H ${{ secrets.FE_SERVER_IP }} >> ~/.ssh/known_hosts
#       - name: Run deploy script
#         run: ssh ubuntu@${{ secrets.FE_SERVER_IP }} bash deploy.sh

name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "19.x"
      - name: Install NPM dependencies
        run: npm install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-south-1a
      - name: Deploy Next.js app
        run: bash deploy.sh
